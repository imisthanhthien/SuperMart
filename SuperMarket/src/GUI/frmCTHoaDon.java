/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Controller.NumberOnlyFilter;
import DAO.DAO_CTHoaDon;
import DAO.DAO_HoaDon;
import DAO.SQLProvider;
import POJO.CTHoaDon;
import POJO.HangHoa;

import java.sql.CallableStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;


/**
 *
 * @author NGUYEN THANH THIEN
 */
public final class frmCTHoaDon extends javax.swing.JFrame {

    DecimalFormat df = new DecimalFormat("#.###");
    Map< String, Integer> items = new HashMap<>();
    Map< String, Integer> itemhh = new HashMap<>();
    Vector<String> header = new Vector<>();
    Vector data = new Vector();
    DefaultTableModel tblModel = new DefaultTableModel();

    HangHoa hh = new HangHoa();
    CTHoaDon cthd = new CTHoaDon();
    int manv;
    String tennv;

    /**
     * Creates new form frmCTHoaDon
     *
     * @param manv
     * @param tennv
     */
    public frmCTHoaDon(int manv, String tennv) {
        initComponents();
        setLocationRelativeTo(null);
        this.manv = manv;
        this.tennv = tennv;
        tblModel = (DefaultTableModel) this.tblHoaDon.getModel();

        header.add("MÃ HÀNG HÓA");
        header.add("TÊN SẢN PHẨM");
        header.add("SỐ LƯỢNG");
        header.add("ĐƠN GIÁ");
        header.add("THÀNH TIỀN");

        tblModel.setDataVector(data, header);

        txtTime.setText("" + java.time.LocalDate.now());

        txtMaNV.setText("" + manv + "-" + tennv.toUpperCase());
        LoadComboboxKhachHang();

        LoadComboboxHangHoa();

        LoadCTHoaDon();
        event();

        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

    }

    public frmCTHoaDon() {
        JOptionPane.showMessageDialog(this,
                "Vui lòng đăng nhập");
        System.exit(0);
    }
    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url = "jdbc:sqlserver://localhost:1433;databaseName=QL_BanHang";
    String user = "sa";
    String pass = "123";
    Statement st;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        cbbKhachHang = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        txtSoluong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbbHangHoa = new javax.swing.JComboBox<>();
        btnThanhToan = new javax.swing.JButton();
        btn_in = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(60, 45, 81));

        jPanel2.setBackground(new java.awt.Color(60, 45, 81));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mã KH | Tên KH");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Tổng tiền");

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTongTien.setEnabled(false);
        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        cbbKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbbKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Nhập số lượng: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Nhập đơn giá: ");

        txtDonGia.setEditable(false);
        txtDonGia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtDonGia.setEnabled(false);
        txtDonGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDonGiaKeyReleased(evt);
            }
        });

        txtSoluong.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSoluong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoluongKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Tên HH | Số lượng");

        cbbHangHoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbbHangHoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-cash-in-hand-48.png"))); // NOI18N
        btnThanhToan.setText("THANH TOÁN");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btn_in.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_in.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-bill-30.png"))); // NOI18N
        btn_in.setText("Lưu hóa đơn");
        btn_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTongTien))
                                .addGap(35, 35, 35)
                                .addComponent(btnThanhToan))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbbKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 53, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_in)
                        .addGap(41, 41, 41))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbbHangHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_in)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-new-copy-50.png"))); // NOI18N
        btnThem.setText("THÊM HÓA ĐƠN");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-agreement-delete-50.png"))); // NOI18N
        btnXoa.setText("XÓA HÓA ĐƠN");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-renew-50.png"))); // NOI18N
        btnSua.setText("SỬA HÓA ĐƠN");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-paid-bill-50.png"))); // NOI18N
        btnLuu.setText("LƯU HÓA ĐƠN");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        tblHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tblHoaDon.setFillsViewportHeight(true);
        tblHoaDon.setFocusable(false);
        tblHoaDon.setRowHeight(25);
        tblHoaDon.setSelectionBackground(new java.awt.Color(248, 62, 62));
        tblHoaDon.getTableHeader().setReorderingAllowed(false);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Mã NV | Tên NV:");

        txtMaNV.setEditable(false);
        txtMaNV.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thời gian: ");

        txtTime.setEditable(false);
        txtTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTime.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(7, 7, 7)
                                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLuu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLuu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        txtSoluong.setText("");
        txtDonGia.setText("");
        txtTongTien.setText("");

        cbbKhachHang.requestFocus();

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int pos = tblHoaDon.getSelectedRow();
        int soluongx = Integer.parseInt(txtSoluong.getText().trim());
        try {
            if (pos < 0) {
                JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn cần sửa!!!");
            } else {

                if (KT_solonglap(soluongx)) {
                    JOptionPane.showMessageDialog(this, "Số lượng sửa vượt quá trong kho, vui lòng xem lại");
                } else {
                    this.UpdateCTHoaDon();
                    cbbHangHoa.removeAllItems();
                    LoadComboboxHangHoa();

                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:

        try {
            if (KT_HoadonEmpty()) {
                PayCTHoaDon();

            } else {
                JOptionPane.showMessageDialog(this, "Không có hóa đơn nào để thanh toán!!!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_btnThanhToanActionPerformed

   
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        try {
            String nhomHH = (String) cbbHangHoa.getSelectedItem();
            String soluong = txtSoluong.getText();
            String dongia = txtDonGia.getText();
            int soluongx = Integer.parseInt(txtSoluong.getText().trim());

            int manhomHH = itemhh.get(nhomHH);
            String mahh = String.valueOf(manhomHH);
            if (soluong.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập số lượng");
            } else if (dongia.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập giá");
            } else if (KT_TonTaiHangHoa(mahh)) {
                JOptionPane.showMessageDialog(this, "Mặt hàng này đã có trong ct hóa đơn, vui lòng (tăng - giảm) số lượng or chọn mặt hàng khác");
            } else {
                if (KT_solonglapx(soluongx, manhomHH)) {
                    JOptionPane.showMessageDialog(this, "Số lượng vượt quá mặt hàng trong kho, vui lòng xem lại");
                } else {
                    InsertCTHoaDon();
                    cbbHangHoa.removeAllItems();
                    LoadComboboxHangHoa();

                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_btnLuuActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        try {
            int pos = tblHoaDon.getSelectedRow();

            this.txtSoluong.setText("" + tblModel.getValueAt(pos, 2));
            this.txtDonGia.setText("" + tblModel.getValueAt(pos, 3));

            this.txtTongTien.setText("" + tblModel.getValueAt(pos, 4));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void txtSoluongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoluongKeyReleased
        // TODO add your handling code here:
        String nhomHH = (String) cbbHangHoa.getSelectedItem();
        int manhomHH = itemhh.get(nhomHH);
        try {
            int soluong = Integer.parseInt(txtSoluong.getText());

            try {
                String sql = "Select *from HangHoa where MaHH = " + manhomHH;
                SQLProvider proi = new SQLProvider();
                proi.open();
                ResultSet rs = proi.executeQuery(sql);
                if (rs.next()) {
                    txtDonGia.setText("" + rs.getDouble("Giaban"));
                    double tt = soluong * rs.getDouble("Giaban");
                    DecimalFormat df = new DecimalFormat("#.###");
                    String result = df.format(tt);
                    txtTongTien.setText("" + result);
                }
            } catch (Exception e) {
            }

        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_txtSoluongKeyReleased

    private void txtDonGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDonGiaKeyReleased
        // TODO add your handling code here:
        try {
            int soluong = Integer.parseInt(txtSoluong.getText());
            float gianhap = Float.parseFloat(txtDonGia.getText());
            if (txtSoluong.getText().equals("")) {

            } else {
                float tt = soluong * gianhap;
                txtTongTien.setText("" + tt);
            }

        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_txtDonGiaKeyReleased

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int pos = tblHoaDon.getSelectedRow();
        try {
            if (pos < 0) {
                JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn cần xóa trên bảng, vui lòng thử lại!!!");
            } else {
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa hóa đơn này không", "Thông báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    this.DeleteCTHoaDon();
                    cbbHangHoa.removeAllItems();
                    LoadComboboxHangHoa();
                }

            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btn_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inActionPerformed
        // TODO add your handling code here:
        String tenkh = (String) cbbKhachHang.getSelectedItem();
         ArrayList<CTHoaDon> lisst = DAO_CTHoaDon.DS_CTHoaDon();
         frmhoadon hoadon = new frmhoadon(tenkh,tennv,lisst);
          hoadon.setVisible(true);
    }//GEN-LAST:event_btn_inActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCTHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCTHoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btn_in;
    private javax.swing.JComboBox<String> cbbHangHoa;
    private javax.swing.JComboBox<String> cbbKhachHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void LoadComboboxKhachHang() {
        try {
            SQLProvider data = new SQLProvider();
            data.open();
            String SQL = "SELECT *FROM KhachHang";

            DefaultComboBoxModel ccbmodel = new DefaultComboBoxModel();
            cbbKhachHang.setModel(ccbmodel);

            ResultSet rs = data.executeQuery(SQL);

            // Thêm các sản phẩm vào mô hình ComboBox và lưu trữ tên và khóa chính tương ứng vào Map
            while (rs.next()) {
                int id = rs.getInt("MaKH");
                String name = rs.getString("TenKH");
                items.put(name, id);
                ccbmodel.addElement(name);
            }

            data.close();
        } catch (SQLException e) {
            System.out.println("LỗI: " + e.getMessage());
        }
    }

    private void LoadCTHoaDon() {
        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call  DS_CTHoaDon()}");
            cs.execute();

            ResultSet rs = cs.getResultSet();
            while (rs.next()) {
                Vector v = new Vector();

                cthd.setMaHH(rs.getInt("MaHH"));
                hh.setTenHH(rs.getString("TenHH"));
                cthd.setSoluong(rs.getInt("Soluong"));
                cthd.setGiaBan(rs.getFloat("Giaban"));
                cthd.setThanhtien(rs.getFloat("Thanhtien"));

                v.add(cthd.getMaHH());
                v.add(hh.getTenHH());
                v.add(cthd.getSoluong());
                v.add(df.format(cthd.getGiaBan()));
                v.add(df.format(cthd.getThanhtien()));
                this.data.add(v);

            }
            data.close();
        } catch (Exception e) {
        }
    }

    private void InsertCTHoaDon() {

        String nhomHH = (String) cbbHangHoa.getSelectedItem();

        int manhomHH = itemhh.get(nhomHH);

        int soluong = Integer.parseInt(txtSoluong.getText().trim());

        double giaban = Double.parseDouble(txtDonGia.getText().trim());

        double thanhtien = Double.parseDouble(txtTongTien.getText().trim());
        DecimalFormat df = new DecimalFormat("#.###");
        df.format(thanhtien);
        boolean KT = DAO_CTHoaDon.InsertCTHoaDon(manhomHH, soluong, giaban, thanhtien);
        if (KT) {
            JOptionPane.showMessageDialog(this, "Thêm thành công");
        }

        tblModel.setRowCount(0);
        LoadCTHoaDon();
        tblHoaDon.updateUI();
    }

    private void UpdateCTHoaDon() {
        int pos = tblHoaDon.getSelectedRow();
        int mahh = (int) tblHoaDon.getValueAt(pos, 0);

        int soluong = Integer.parseInt(txtSoluong.getText().trim());

        float giaban = Float.parseFloat(txtDonGia.getText().trim());

        boolean KT = DAO_CTHoaDon.UpdateChiTietHoaDon(mahh, soluong, giaban);
        if (KT) {
            JOptionPane.showMessageDialog(this, "Sửa thành công");
        }
        tblModel.setRowCount(0);
        LoadCTHoaDon();
        tblHoaDon.updateUI();
    }

    private void DeleteCTHoaDon() {
        try {
            int pos = tblHoaDon.getSelectedRow();
            int mahh = (int) tblHoaDon.getValueAt(pos, 0);

            boolean KT = DAO_CTHoaDon.DeleteChiTietHoaDon(mahh);
            if (KT) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
            }
            tblModel.setRowCount(0);
            LoadCTHoaDon();
            tblHoaDon.updateUI();
        } catch (Exception e) {
        }
    }

    private void LoadComboboxHangHoa() {

        try {
            String SQL = "SELECT *FROM HangHoa";
            SQLProvider datacbb = new SQLProvider();
            datacbb.open();

            DefaultComboBoxModel ccbmodelhh = new DefaultComboBoxModel();
            cbbHangHoa.setModel(ccbmodelhh);

            ResultSet rss = datacbb.executeQuery(SQL);

            // Thêm các sản phẩm vào mô hình ComboBox và lưu trữ tên và khóa chính tương ứng vào Map
            while (rss.next()) {
                int id = rss.getInt(1);
                int sl = rss.getInt(6);
                String adu = String.valueOf(sl);
                String name = rss.getString(2);
                String aduvip = name + " | " + adu;
                itemhh.put(aduvip, id);

                ccbmodelhh.addElement(aduvip);
            }

            datacbb.close();
        } catch (SQLException e) {
            System.out.println("LỗI: " + e.getMessage());
        }
    }

    private void PayCTHoaDon() {
        String nhomKH = (String) cbbKhachHang.getSelectedItem();
        int manhomKH = items.get(nhomKH);
        float tongtien = 0;

        try {
            String sql = "Select *from CTHoaDon";
            SQLProvider sss = new SQLProvider();
            sss.open();
            ResultSet rs = sss.executeQuery(sql);
            while (rs.next()) {
                float value = rs.getFloat("Thanhtien");
                tongtien += value;
            }
        } catch (Exception e) {
        }
        // Cộng giá trị vào tổng tiền

        if (JOptionPane.showConfirmDialog(this, "Bạn có muốn than toán hóa đơn này cho khách hàng : " + cbbKhachHang.getSelectedItem() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            boolean KT = DAO_HoaDon.ThanhToanCTHoaDon(manv, manhomKH, tongtien);
            if (KT) {
                JOptionPane.showMessageDialog(this, "Thanh toán thành công");
                RemoveCTHoaDonhadPay();
            }
        }

    }

    public void RemoveCTHoaDonhadPay() {

        boolean KT = DAO_HoaDon.RemoveCTHoaDonhadPay();
        if (KT) {
            JOptionPane.showMessageDialog(this, "Đã thêm vào hóa đơn");
        }

        tblModel.setRowCount(0);
        LoadCTHoaDon();
        tblHoaDon.updateUI();
    }

    public boolean KT_TonTaiHangHoa(String mahh) {
        try {
            String sql = "Select * from CTHoaDon";
            SQLProvider kthh = new SQLProvider();
            kthh.open();
            ResultSet rs = kthh.executeQuery(sql);

            while (rs.next()) {
                int maloaihh = rs.getInt("MaHH");
                String maloaiHH = String.valueOf(maloaihh);
                if (mahh.equals(maloaiHH)) {
                    return true;
                }
            }
        } catch (Exception e) {
        }
        return false;
    }

    public boolean KT_solonglap(int sl) {
        try {
            String sql = "Select hh.Soluong, cthh.Soluong from HangHoa hh, CTHoaDon cthh\n"
                    + "where hh.MaHH = cthh.MaHH";
            SQLProvider hhkt = new SQLProvider();
            hhkt.open();
            ResultSet rsx = hhkt.executeQuery(sql);
            while (rsx.next()) {
                int slkho = rsx.getInt(1);
                int slban = rsx.getInt(2);
                int sltong = slkho + slban;
                if (sl > sltong) {
                    return true;
                } else {
                    return false;
                }
            }
        } catch (Exception e) {
        }
        return false;
    }

    public boolean KT_solonglapx(int sl, int mahh) {
        try {
            String sql = "Select * from HangHoa where MaHH =" + mahh;
            SQLProvider hhsl = new SQLProvider();
            hhsl.open();
            ResultSet rs = hhsl.executeQuery(sql);
            while (rs.next()) {
                int slkho = rs.getInt("Soluong");
                if (sl > slkho) {
                    return true;
                } else {
                    return false;
                }
            }
        } catch (Exception e) {
        }
        return false;
    }

    public boolean KT_HoadonEmpty() {
        if (tblHoaDon.getRowCount() == 0) {
            return false;
        }
        return true;
    }

    private void event() {
         ((AbstractDocument) txtSoluong.getDocument()).setDocumentFilter(new NumberOnlyFilter());
    }

}
