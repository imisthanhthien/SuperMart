/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JPN;

import Controller.NumberOnlyFilter;
import DAO.SQLProvider;
import POJO.KhachHang;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author NGUYEN THANH THIEN
 */
public final class jpnKhachHang extends javax.swing.JPanel {

    Vector<String> header = new Vector<>();
    Vector data = new Vector();
    DefaultTableModel tbModel = new DefaultTableModel();
    KhachHang kh = new KhachHang();

    /**
     * Creates new form jpnKhachHang
     */
    public jpnKhachHang() {
        initComponents();
        tbModel = (DefaultTableModel) this.tbKhachHang.getModel();

        header.add("MÃ KHÁCH HÀNG");
        header.add("TÊN KHÁCH HÀNG");
        header.add("ĐỊA CHỈ");
        header.add("SỐ ĐIỆN THOẠI");
        tbModel.setDataVector(data, header);
        
        loadTableKhachHang();

        TableCellRenderer rendererFromHeader = tbKhachHang.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        tbKhachHang.getTableHeader().setDefaultRenderer(rendererFromHeader);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer(); // tạo renderer
        renderer.setHorizontalAlignment(JLabel.CENTER); // thiết lập căn giữa cho dòng
        for (int i = 0; i < tbKhachHang.getColumnCount(); i++) {
            tbKhachHang.getColumnModel().getColumn(i).setCellRenderer(renderer); // sử dụng renderer cho tất cả các cột
        }

        TableColumnModel columnModel = tbKhachHang.getColumnModel();
        TableColumn column = columnModel.getColumn(0);
        TableColumn column1 = columnModel.getColumn(1);

        column.setPreferredWidth(50);
        column1.setPreferredWidth(250);

        tbKhachHang.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 18));
        tbKhachHang.getTableHeader().setOpaque(false);
        tbKhachHang.getTableHeader().setBackground(new Color(32, 136, 203));
        tbKhachHang.getTableHeader().setForeground(new Color(0, 0, 0));
        tbKhachHang.setRowHeight(40);
        chondau();
        event();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKhachHang = new javax.swing.JTable();

        setBackground(new java.awt.Color(60, 45, 81));
        setPreferredSize(new java.awt.Dimension(963, 751));

        jPanel2.setBackground(new java.awt.Color(60, 45, 81));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THÔNG TIN KHÁCH HÀNG", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 238, 9));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mã khách hàng:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(242, 238, 9));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tên khách hàng:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 238, 9));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Địa chỉ:");

        txtMaKH.setEditable(false);
        txtMaKH.setBackground(new java.awt.Color(246, 215, 184));
        txtMaKH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtMaKH.setEnabled(false);

        txtTenKH.setBackground(new java.awt.Color(246, 215, 184));
        txtTenKH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        txtDiaChi.setBackground(new java.awt.Color(246, 215, 184));
        txtDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(242, 238, 9));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Số điện thoại:");

        txtSDT.setBackground(new java.awt.Color(246, 215, 184));
        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                                .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconMain/icons8-add-user-male-skin-type-7-48.png"))); // NOI18N
        btnThem.setText("THÊM KHÁCH HÀNG");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconMain/icons8-unfriend-skin-type-7-48.png"))); // NOI18N
        btnXoa.setText(" XÓA KHÁCH HÀNG");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconMain/icons8-registration-skin-type-7-48.png"))); // NOI18N
        btnSua.setText("SỬA KHÁCH HÀNG");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconMain/icons8-apply-skin-type-7-48.png"))); // NOI18N
        btnLuu.setText("LƯU KHÁCH HÀNG");
        btnLuu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-search-25.png"))); // NOI18N
        btnTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(242, 238, 9));
        jLabel5.setText("Tìm kiếm KH:");

        txtTimKiem.setBackground(new java.awt.Color(246, 215, 184));
        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        tbKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        tbKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbKhachHang.setFillsViewportHeight(true);
        tbKhachHang.setFocusable(false);
        tbKhachHang.setRowHeight(30);
        tbKhachHang.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tbKhachHang.getTableHeader().setReorderingAllowed(false);
        tbKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKhachHang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTimKiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 58, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void tbKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKhachHangMouseClicked
        int pos = tbKhachHang.getSelectedRow();

        txtMaKH.setText("" + tbModel.getValueAt(pos, 0));
        txtTenKH.setText((String) (tbKhachHang.getValueAt(pos, 1)));
        txtDiaChi.setText((String) (tbKhachHang.getValueAt(pos, 2)));
        txtSDT.setText((String) (tbKhachHang.getValueAt(pos, 3)));

    }//GEN-LAST:event_tbKhachHangMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
       clearKH();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

        try {
            int pos = tbKhachHang.getSelectedRow();

            if (pos < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần xóa");
            } else {

                int maKH = (int) tbKhachHang.getValueAt(pos, 0);
                String makh = String.valueOf(maKH);

                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa Khách hàng :" + maKH, "Thông báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    if (KT_MaKHinHoaDon(makh)) {
                        JOptionPane.showMessageDialog(this, "Khách hàng này không thể xóa vì đang nằm trong Hóa Đơn");
                    } else {
                        this.DeleteKhachHang();
                        clearKH();
                    }

                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        try {
            String TenKH = txtTenKH.getText().trim();
            String DiaChi = txtDiaChi.getText().trim();
            String SDT = txtSDT.getText().trim();
            if (TenKH.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên khách hàng không được để trống");
            } else if (DiaChi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Địa chỉ khách hàng không được để trống");
            } else if (SDT.isEmpty()) {
                JOptionPane.showMessageDialog(this, "SĐT khách hàng không được để trống");
            } else if (KT_KhachHang(SDT)) {
                JOptionPane.showMessageDialog(this, "Khách hàng này đã tồn tại vui lòng xem lại");
               
            } else {
                this.InsertKhachHang();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int pos = tbKhachHang.getSelectedRow();
        String TenKH = txtTenKH.getText().trim();
        String DiaChi = txtDiaChi.getText().trim();
        String SDT = txtSDT.getText().trim();
        if (pos < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần sửa");
        } else if (TenKH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sửa không thành công, tên KH trống");
        } else if (DiaChi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sửa không thành công, Địa chỉ KH trống");
        } else if (SDT.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sửa không thành công, SĐT KH trống");
        } else {
            this.UpdateKhachHang();
        }

    }//GEN-LAST:event_btnSuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbKhachHang;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void loadTableKhachHang() {
        Vector<KhachHang> dskh = DAO.DAO_KhachHang.DS_KhachHang();
        for (KhachHang kh : dskh) {
            Vector v = new Vector();
            v.add(kh.getMaKH());
            v.add(kh.getTenKH());
            v.add(kh.getDiaChi());
            v.add(kh.getSdt());
            data.add(v);
        }
    }

    private void DeleteKhachHang() {
        int pos = tbKhachHang.getSelectedRow();
        int maKH = (int) tbKhachHang.getValueAt(pos, 0);

        boolean KT = DAO.DAO_KhachHang.DeleteKhachHang(maKH);
        if (KT) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
        }
        tbModel.setRowCount(0);
        loadTableKhachHang();
        tbKhachHang.updateUI();
    }

    private void InsertKhachHang() {
        String TenKH = txtTenKH.getText().trim();
        String DiaChi = txtDiaChi.getText().trim();
        String SDT = txtSDT.getText().trim();

        boolean KT = DAO.DAO_KhachHang.InsertKhachHang(TenKH, DiaChi, SDT);
        if (KT) {
            JOptionPane.showMessageDialog(this, "Thêm thành công");
        }
        tbModel.setRowCount(0);
        loadTableKhachHang();
        tbKhachHang.updateUI();
    }

    private void UpdateKhachHang() {
        int pos = tbKhachHang.getSelectedRow();
        int maKH = (int) tbKhachHang.getValueAt(pos, 0);
        String TenKH = txtTenKH.getText().trim();
        String DiaChi = txtDiaChi.getText().trim();
        String SDT = txtSDT.getText().trim();

        boolean KT = DAO.DAO_KhachHang.UpdateKhachHang(maKH, TenKH, DiaChi, SDT);
        if (KT) {
            JOptionPane.showMessageDialog(this, "Sửa thành công");
        }
        tbModel.setRowCount(0);
        loadTableKhachHang();
        tbKhachHang.updateUI();

    }

    public boolean KT_KhachHang(String sdt) {
        try {
            String sql = "Select *from KhachHang";
            SQLProvider KH = new SQLProvider();
            KH.open();
            ResultSet rs = KH.executeQuery(sql);
            while (rs.next()) {
                if (sdt.equals(rs.getString("SDT"))) {
                    return true;
                }
            }
        } catch (Exception e) {
        }
        return false;
    }
     public boolean KT_MaKHinHoaDon(String ma) {
        try {
            String sql = "Select *from HoaDon";
            SQLProvider KH = new SQLProvider();
            KH.open();
            ResultSet rs = KH.executeQuery(sql);
            while (rs.next()) {
                int mahh = rs.getInt("MaKH");
                String mahhstr = String.valueOf(mahh);
                if (ma.equals(mahhstr)){
                    return true;
                }
            }
        } catch (Exception e) {
        }
        return false;
    }
     public void chondau()
     {
         
        tbKhachHang.setRowSelectionInterval(0, 0);
        int pos = tbKhachHang.getSelectedRow();
        txtMaKH.setText("" + tbModel.getValueAt(pos, 0));
        txtTenKH.setText((String) (tbKhachHang.getValueAt(pos, 1)));
        txtDiaChi.setText((String) (tbKhachHang.getValueAt(pos, 2)));
        txtSDT.setText((String) (tbKhachHang.getValueAt(pos, 3)));
     }
     private void event() {
        ((AbstractDocument) txtSDT.getDocument()).setDocumentFilter(new NumberOnlyFilter());
       
        
    }

    private void clearKH() {
        txtMaKH.setText("");
        txtTenKH.setText("");
        txtDiaChi.setText("");
        txtSDT.setText("");

        txtMaKH.setEditable(false);
        txtTenKH.requestFocus();
    }
}
