/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JPN;

import DAO.SQLProvider;
import POJO.HangHoa;
import POJO.HoaDon;
import POJO.PhieuNhap;
import POJO.PhieuXuat;
import java.awt.Color;
import java.awt.Font;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGUYEN THANH THIEN
 */
public class jpnThongKe extends javax.swing.JPanel {

    Vector<String> header = new Vector<>();
    Vector data = new Vector();
    DefaultTableModel tbModel = new DefaultTableModel();

    Vector<String> headerPN = new Vector<>();
    Vector dataPN = new Vector();
    DefaultTableModel tbModelPN = new DefaultTableModel();

    Vector<String> headerPX = new Vector<>();
    Vector dataPX = new Vector();
    DefaultTableModel tbModelPX = new DefaultTableModel();

    HangHoa hh = new HangHoa();
    HoaDon hd = new HoaDon();
    PhieuNhap pn = new PhieuNhap();
    PhieuXuat px = new PhieuXuat();
    DecimalFormat df = new DecimalFormat("#,### VNĐ");
    DecimalFormat dftb = new DecimalFormat("#.###");
    int Tongdanhthunhap = 0;
    int Tongdanhthuxuat = 0;
    int Tongdanhthuban = 0;
    int tongdanhthu = 0;

    /**
     * Creates new form jpnThongKe
     */
    public jpnThongKe() {
        initComponents();

        //Bảng bán hàng
        tbModel = (DefaultTableModel) this.tblThongKe.getModel();

        header.add("Mã Hóa Đơn");
        header.add("Ngày thanh toán");
        header.add("Thành tiền");
        tbModel.setDataVector(data, header);

        //Bảng xuất hàng
        tbModelPX = (DefaultTableModel) this.tblXuatHang.getModel();

        headerPX.add("Mã Hóa Đơn");
        headerPX.add("Ngày thanh toán");
        headerPX.add("Thành tiền");
        tbModelPX.setDataVector(dataPX, headerPX);

        //Bảng nhập hàng
        tbModelPN = (DefaultTableModel) this.tblNhapHang.getModel();

        headerPN.add("Mã Hóa Đơn");
        headerPN.add("Ngày thanh toán");
        headerPN.add("Thành tiền");
        tbModelPN.setDataVector(dataPN, headerPN);

        loadTableBanHang();
        loadTableNhapHang();
        loadTableXuatHang();
        loadTongDanhThu();

        tblThongKe.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblThongKe.getTableHeader().setOpaque(false);
        tblThongKe.getTableHeader().setBackground(new Color(32, 136, 203));
        tblThongKe.getTableHeader().setForeground(new Color(0, 0, 0));
        tblThongKe.setRowHeight(25);

        tblNhapHang.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblNhapHang.getTableHeader().setOpaque(false);
        tblNhapHang.getTableHeader().setBackground(new Color(32, 136, 203));
        tblNhapHang.getTableHeader().setForeground(new Color(0, 0, 0));
        tblNhapHang.setRowHeight(25);

        tblXuatHang.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblXuatHang.getTableHeader().setOpaque(false);
        tblXuatHang.getTableHeader().setBackground(new Color(32, 136, 203));
        tblXuatHang.getTableHeader().setForeground(new Color(0, 0, 0));
        tblXuatHang.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblXuatHang = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNhapHang = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jlbTongDoanhTHuBan = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jlbTongDoanhTHuXuat = new javax.swing.JLabel();
        jlbTongDoanhTHuNhap = new javax.swing.JLabel();
        jlbTongDoanhNHap = new javax.swing.JLabel();
        jlbTinhtrang = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTiemKiem = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(60, 45, 81));
        setPreferredSize(new java.awt.Dimension(963, 751));

        tblXuatHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblXuatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tblXuatHang.setFillsViewportHeight(true);
        jScrollPane2.setViewportView(tblXuatHang);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("NHẬP HÀNG");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("XUẤT HÀNG");

        tblNhapHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblNhapHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tblNhapHang.setFillsViewportHeight(true);
        jScrollPane3.setViewportView(tblNhapHang);

        jPanel1.setBackground(new java.awt.Color(60, 45, 81));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THU NHẬP ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 255, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("TỔNG DOANH THU : ");

        jlbTongDoanhTHuBan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbTongDoanhTHuBan.setForeground(new java.awt.Color(252, 252, 64));
        jlbTongDoanhTHuBan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTongDoanhTHuBan.setText("Tổng doanh thu bán");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("TỔNG TIỀN XUẤT HÀNG :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("TỔNG TIỀN BÁN HÀNG:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TỔNG TIỀN NHẬP HÀNG :");

        jlbTongDoanhTHuXuat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbTongDoanhTHuXuat.setForeground(new java.awt.Color(79, 204, 246));
        jlbTongDoanhTHuXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTongDoanhTHuXuat.setText("Tổng doanh thu xuất");

        jlbTongDoanhTHuNhap.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbTongDoanhTHuNhap.setForeground(new java.awt.Color(255, 158, 110));
        jlbTongDoanhTHuNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTongDoanhTHuNhap.setText("Tổng doanh thu nhập");

        jlbTongDoanhNHap.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbTongDoanhNHap.setForeground(new java.awt.Color(255, 255, 255));
        jlbTongDoanhNHap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTongDoanhNHap.setText("Tổng doanh thu nhập");

        jlbTinhtrang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbTinhtrang.setForeground(new java.awt.Color(255, 0, 0));
        jlbTinhtrang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbTongDoanhTHuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbTongDoanhNHap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
                            .addComponent(jlbTongDoanhTHuBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbTongDoanhTHuXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbTinhtrang, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 28, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTongDoanhTHuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTongDoanhTHuXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTongDoanhTHuBan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbTongDoanhNHap, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbTinhtrang)
                .addGap(26, 26, 26))
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" BÁN HÀNG");

        tblThongKe.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tblThongKe.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(tblThongKe);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TÌM KIẾM THEO NGÀY:");

        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-search-24.png"))); // NOI18N
        btnTim.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconButtom/icons8-restart-50.png"))); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.setToolTipText("");
        btnLamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(130, 255, 147));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("THỐNG KÊ DOANH THU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))))
                .addGap(13, 13, 13))
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(197, 197, 197))
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTiemKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTim)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTiemKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        tbModel.setRowCount(0);
        tbModelPN.setRowCount(0);
        tbModelPX.setRowCount(0);
        Tongdanhthunhap = 0;
        Tongdanhthuxuat = 0;
        Tongdanhthuban = 0;
        tongdanhthu = 0;

        loadTableBanHang();
        loadTableNhapHang();
        loadTableXuatHang();
        loadTongDanhThu();
        tblThongKe.updateUI();
        tblNhapHang.updateUI();
        tblXuatHang.updateUI();


    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        try {
             Tongdanhthunhap = 0;
        Tongdanhthuxuat = 0;
        Tongdanhthuban = 0;
        tongdanhthu = 0;

        String date = txtTiemKiem.getText();

        if (date.length() > 0) {
            TimkiemNhap();
            TimkiemBanHang();
            TimkiemXuat();

        }
        loadTongDanhThu();

        } catch (Exception e) {
        }
//        
    }//GEN-LAST:event_btnTimActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jlbTinhtrang;
    private javax.swing.JLabel jlbTongDoanhNHap;
    private javax.swing.JLabel jlbTongDoanhTHuBan;
    private javax.swing.JLabel jlbTongDoanhTHuNhap;
    private javax.swing.JLabel jlbTongDoanhTHuXuat;
    private javax.swing.JTable tblNhapHang;
    private javax.swing.JTable tblThongKe;
    private javax.swing.JTable tblXuatHang;
    private javax.swing.JTextField txtTiemKiem;
    // End of variables declaration//GEN-END:variables

    private void loadTableBanHang() {
        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call LoadTableDanhThu()}");
            cs.execute();

            ResultSet rs = cs.getResultSet();
            while (rs.next()) {
                Vector v = new Vector();
                
                hd.setMahd(rs.getInt(1));
                hd.setNgaylap(rs.getString(2));
                hd.setTongtien(rs.getFloat(3));

                v.add(hd.getMahd());
                v.add(hd.getNgaylap());
                v.add(dftb.format(hd.getTongtien()));

                Tongdanhthuban += rs.getInt("Tongtien");
                this.data.add(v);
            }
            jlbTongDoanhTHuBan.setText("" + df.format(Tongdanhthuban));
        } catch (Exception e) {
        }
    }

    private void loadTableNhapHang() {
        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call LoadTableDanhThuNhap()}");
            cs.execute();

            ResultSet rs = cs.getResultSet();
            while (rs.next()) {
                Vector v = new Vector();

                pn.setMaPN(rs.getInt(1));
                pn.setNgayNhap(rs.getString(2));
                pn.setThanhtien(rs.getFloat(3));

                v.add(pn.getMaPN());
                v.add(pn.getNgayNhap());
                v.add(dftb.format(pn.getThanhtien()));

                Tongdanhthunhap += rs.getInt("ThanhTien");
                dataPN.add(v);
            }
            jlbTongDoanhTHuNhap.setText("" + df.format(Tongdanhthunhap));
        } catch (Exception e) {
        }

    }

    private void loadTableXuatHang() {
        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call LoadTableDanhThuXuat()}");
            cs.execute();

            ResultSet rs = cs.getResultSet();
            while (rs.next()) {
                Vector v = new Vector();

                px.setMaPX(rs.getInt(1));
                px.setNgayBan(rs.getString(2));
                px.setThanhtien(rs.getFloat(3));

                v.add(px.getMaPX());
                v.add(px.getNgayBan());
                v.add(dftb.format(px.getThanhtien()));

                Tongdanhthuxuat += rs.getInt("ThanhTien");
                dataPX.add(v);
            }
            jlbTongDoanhTHuXuat.setText("" + df.format(Tongdanhthuxuat) );
        } catch (Exception e) {
        }

    }

    private void loadTongDanhThu() {

        try {
            tongdanhthu = (Tongdanhthuban + Tongdanhthuxuat) - Tongdanhthunhap;

            jlbTongDoanhNHap.setText("" + df.format(tongdanhthu));
            if (tongdanhthu < 0) {
                jlbTinhtrang.setForeground(new Color(255, 0, 0));
                jlbTinhtrang.setText("Thu nhập âm");

            } else if (tongdanhthu == 0) {
                jlbTinhtrang.setForeground(new Color(255, 0, 204));
                jlbTinhtrang.setText("Không có thu nhập");

            } else {
                jlbTinhtrang.setForeground(new Color(0, 255, 255));
                jlbTinhtrang.setText("Thu nhập ổn đinh");
            }
        } catch (Exception e) {
        }
    }

    private void TimkiemBanHang() {
        try {

            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonTheoNgay(?)}");
            // Execute a stored procedure that returns some data.
            cs.setString(1, txtTiemKiem.getText().trim());
            ResultSet rs = cs.executeQuery();

            tbModel.setRowCount(0);
            TimkiemBanHangLoad();
            tblThongKe.updateUI();
            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
            
        }
    }

    private void TimkiemNhap() {

        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonNhapTheoNgay(?)}");
            // Execute a stored procedure that returns some data.

            cs.setString(1, txtTiemKiem.getText());
            ResultSet rs = cs.executeQuery();

            tbModelPN.setRowCount(0);
            TimkiemNhapLoad();
            tblNhapHang.updateUI();

            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
           
        }
    }

    private void TimkiemXuat() {

        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonXuatTheoNgay(?)}");
            // Execute a stored procedure that returns some data.
            cs.setString(1, txtTiemKiem.getText().trim());
            ResultSet rs = cs.executeQuery();

            tbModelPX.setRowCount(0);
            TimkiemXuatLoad();
            tblXuatHang.updateUI();
            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
            
        }
    }

    private void TimkiemNhapLoad() {

        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonNhapTheoNgay(?)}");
            // Execute a stored procedure that returns some data.
            cs.setString(1, txtTiemKiem.getText().trim());
            ResultSet rs = cs.executeQuery();
            while (rs.next()) {
                Vector v = new Vector();
                pn.setMaPN(rs.getInt("MaPN"));
                pn.setNgayNhap(rs.getString("Ngaynhap"));
                pn.setThanhtien(rs.getFloat("ThanhTien"));

                v.add(pn.getMaPN());
                v.add(pn.getNgayNhap());
                v.add(pn.getThanhtien());
                Tongdanhthunhap += rs.getInt("ThanhTien");
                dataPN.add(v);
            }
            jlbTongDoanhTHuNhap.setText("" + df.format(Tongdanhthunhap));
            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
            
        }
    }

    private void TimkiemXuatLoad() {

        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonXuatTheoNgay(?)}");
            // Execute a stored procedure that returns some data.
            cs.setString(1, txtTiemKiem.getText().trim());
            ResultSet rs = cs.executeQuery();
            while (rs.next()) {
                Vector v = new Vector();
                px.setMaPX(rs.getInt("MaPX"));
                px.setNgayBan(rs.getString("Ngayban"));
                px.setThanhtien(rs.getFloat("ThanhTien"));

                v.add(px.getMaPX());
                v.add(px.getNgayBan());
                v.add(px.getThanhtien());
                Tongdanhthuxuat += rs.getInt("ThanhTien");
                dataPX.add(v);
            }
            jlbTongDoanhTHuXuat.setText("" + df.format(Tongdanhthuxuat));
            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
            
        }
    }

    private void TimkiemBanHangLoad() {

        try {
            SQLProvider data = new SQLProvider();
            data.open();
            CallableStatement cs = (data.getConnection()).prepareCall("{call TimKiemHoaDonTheoNgay(?)}");
            // Execute a stored procedure that returns some data.
            cs.setString(1, txtTiemKiem.getText().trim());
            ResultSet rs = cs.executeQuery();
            while (rs.next()) {
                Vector v = new Vector();

                hd.setMahd(rs.getInt("MaHD"));
                hd.setNgaylap(rs.getString("Ngaylap"));
                hd.setTongtien(rs.getFloat("Tongtien"));

                v.add(hd.getMahd());
                v.add(hd.getNgaylap());
                v.add(hd.getTongtien());

                Tongdanhthuban += rs.getInt("Tongtien");
                this.data.add(v);
            }
            jlbTongDoanhTHuBan.setText("" + df.format(Tongdanhthuban));
            // Iterate through the data in the result set and display it.
        } // Handle any errors that may have occurred.
        catch (SQLException e) {
           
        }

    }
}
